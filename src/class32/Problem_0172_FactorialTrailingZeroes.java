package class32;

//172. 阶乘后的零
public class Problem_0172_FactorialTrailingZeroes {
    /**
     * 给定一个整数 n ，返回 n! 结果中尾随零的数量。
     * 
     * 提示 n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1
     * 示例 1：
     * 输入：n = 3
     * 输出：0
     * 解释：3! = 6 ，不含尾随 0
     */
    
    /**
     * 思路:
     * 1*2*...*N的过程中, 每个数做因数分解, 把所有因子都考虑下来, 
     * 2的因子比5的因子要多, N的阶乘真算完的话, 就是问乘出来几个10
     * 所以既然 2 的因子一定比5的因子多，我有一个 5 的因子，一定能够找到一个 2的因子
     * 乘完之后变成10, 所以本题等同于问有几个5的因子
     * 
     * 1) N/5: 每5个数一组, 每一组里有一个5的因子, 5的因子数至少这么多
     * 2) 25例外, 0~25多一个5, 26~50又多一个5, 51~75又多一个5
     *    25个数一组, 每25个数又多一个5的因子
     * 3) 125例外, 0 ~ 125多一个5， 125个数一组, 每125个数又多一个5的因子
     * ... 
     * 等同于求N/5+ N/25 + N/125 + ... + N/某个数变0为止
     * 
     */
    public int trailingZeroes(int n) {
        int ans = 0;
        while(n != 0) {
            n /= 5;
            ans += n;
        }
        return ans;
    }
}
