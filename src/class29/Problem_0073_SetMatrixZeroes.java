package class29;

// 73. 矩阵置零
public class Problem_0073_SetMatrixZeroes {
    /**
     * 给定一个 m x n 的矩阵，如果一个元素为 0 ，则将其所在行和列的所有元素都设为 0 。请使用 原地 算法。
     */
    
    /**
     * 思路:
     * 1. 搞一个bool数组，bool flag[M][N], 记录第i行和第j列是否变成0，
     * 例如flag[3][0]是true，表示第3行，和第0列都变成0。 遍历原始数组，生成这个标记数组之后，
     * 在遍历一遍标记数组，改变原始数组的行和列  --> 空间浪费
     * 
     * 2. 用原始数组第0行的数表示某一列是否变成0，例如matrix[0][j] = 0, 表示的是第j列应该变成0
     * 用原始数组第0列的数表示某一行是否变成0，例如matrix[i][0] = 0, 表示的是第i行应该变成0
     * 
     * 第0行和第0列的数据怎么搞？比如第0行某个位置[0][j]本来是0，表示的意思是0行全变0，同时j列也要变0
     * 而上面这种记录方式，会将第0行的数据变成0，如果本来该位置不是0的话，第0行不能变成0的，所以搞一个变量记录
     * 第0行是否要变成0；
     * 同理第0列某个位置[i][0]本来是0，表示的意思是i行全变0，同时0列也要变0
     * 而上面这种记录方式，会将第0列的数据变成0，如果本来该位置不是0的话，第0列也是不能变成0的，所以搞一个变量记录第0列是否要变0
     * 
     * 先分别遍历原始数组的第0行和第0列，记录是否要将0行和0列变成0；然后从1行1列位置开始，遍历原始数组，如果[i][j]发现0，就将[0][j]个[i][0]
     * 位置都变成0，表示第j列和第i行应该全变成0
     * 
     * 然后遍历原始数组，从[1][1]位置开始，如果对应的0行j列是0或者i行0列是0的话，将[i][j]设置成0
     * 
     * 最后处理第0行和第0列，如果要变0，就全部变成0
     * 
     * 3. 上面方法2用了两个变量，有没有方法再省掉一个变量？
     * 还是和上面的方法一样，用第0行的数，从第1列开始(第0行0列的位置，只代表第0行要不要变0，
     * 如果该位置是0的话，表示第0行要变0；)，表示某一列是否变成0，第0列的数某一行是否变成0；
     * 准备一个变量col0表示第0列要不要变0  --> 相当于把第0列独立出来
     * 
     * 第0列表示对应的行是否要标记0，1~N-1列表示对应的列是否要标记0，col0标记是0列是否要标记成0
     * 
     * 从[0][0]位置开始，如果[i][j]位置是0，且不是第0列的话，将[0][j]位置和[i][0]位置变成0；
     * 如果是第0列的数是0的话，将col0标记为true，同时将[i][0]标记为0
     * 
     */
    public static void setZeroes2(int[][] matrix) {
        boolean row0Zero = false;
        boolean col0Zero = false;
        int i = 0;
        int j = 0;
        // 遍历第0行，如果有0的话，说明第0行应该全部标记为0
        for (j = 0; j < matrix[0].length; j++) {
            if (matrix[0][j] == 0) {
                row0Zero = true;
                break;
            }
        }
        // 遍历第0列，如果有0的话，说明第0列应该全部标记为0
        for (i = 0; i < matrix.length; i++) {
            if (matrix[i][0] == 0) {
                col0Zero = true;
                break;
            }
        }
        // 从[1][1]开始，遍历剩下的位置
        // 如果有0的话，将对应的第0行j列，和第0列的i行位置标成0
        for (i = 1; i < matrix.length; i++) {
            for (j = 1; j < matrix[0].length; j++) {
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        // 从[1][1]开始，遍历剩下的位置，如果0行j列或者i行0列是0
        // 则将matrix[i][j]标记成0
        for (i = 1; i < matrix.length; i++) {
            for (j = 1; j < matrix[0].length; j++) {
                if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                    matrix[i][j] = 0;
                }
            }
        }
        // 如果第0行要标记成0，就标记
        if (row0Zero) {
            for (i = 0; i < matrix[0].length; i++) {
                matrix[0][i] = 0;
            }
        }
        // 如果第0列要标记成0，就标记
        if (col0Zero) {
            for (i = 0; i < matrix.length; i++) {
                matrix[i][0] = 0;
            }
        }
    }
    
    /**
     * 3个变量，更加优化的写法
     */
    public void setZeroes3(int[][] matrix) {
        // 标记第0列是否要标记成0
        boolean col0 = false;
        int i = 0;
        int j = 0;
        // 从[0][0]位置开始遍历
        for (i = 0; i < matrix.length; i++) {
            for (j = 0; j < matrix[0].length; j++) {
                // 如果遍历到的数是0的话
                if (matrix[i][j] == 0) {
                    // 将i行0列的数标记成0，表示第i行要全部变成0
                    matrix[i][0] = 0;
                    // 如果是第0列，第0列也要全部变成0，标记
                    if (j == 0) {
                        col0 = true;
                    } else {
                        // 如果不是第0列，将对应了0行j列位置标记成0
                        matrix[0][j] = 0;
                    }
                }
                /**
                 * 其实像下面这样写更容易理解，上面只不过是化简了
                 */
//                if (matrix[i][j] == 0) {
//                    // 如果遍历到的数是0的话
//                    // 如果是第0列的数，要将第0列全部变成0，所以col0=true
//                    // 同时要将i行的数全部变成0，所以讲[i][0]位置变成0
//                    if (j == 0) {
//                        col0 = true;
//                        matrix[i][0] = 0;
//                    } else {
//                        // 如果不是第0列的数，[i][j]位置，表示的是要将i行和j列都变成0
//                        // 所以[i][0]位置和[0][j]位置变成0
//                        matrix[i][0] = 0;
//                        matrix[0][j] = 0;
//                    }
//                }
            }
        }
        // 标记好了，从最后一行到第0行填好，
        // 列是从第1列开始
        for (i = matrix.length - 1; i >= 0; i--) {
            for (j = 1; j < matrix[0].length; j++) {
                // 如果对应的i行0列位置或者0行j列位置是0，表示当前[i][j]位置要标记为0
                if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                    matrix[i][j] = 0;
                }
            }
        }
        // 单独出来第0列
        if (col0) {
            for (i = 0; i < matrix.length; i++) {
                matrix[i][0] = 0;
            }
        }
    }
}
